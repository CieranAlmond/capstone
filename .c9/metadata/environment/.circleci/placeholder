{"changed":true,"filter":false,"title":"placeholder","tooltip":"/.circleci/placeholder","value":"version: 2.1\n\norbs:\n  aws-eks: circleci/aws-eks@1.0.3\n  kubernetes: circleci/kubernetes@0.11.2\n\nexecutors:\n  python:\n    docker:\n      - image: circleci/python:3.7.3-stretch\n  aws:\n    docker:\n      - image: amazon/aws-cli\n\njobs:\n  lint:\n    docker:\n      - image: circleci/python:3.7.3-stretch\n    steps:\n      - checkout\n      - restore_cache:\n          keys:\n            - v1-dependencies-{{ checksum \"requirements.txt\" }}\n            - v1-dependencies-\n      - run:\n          name: install dependencies\n          command: |\n            python3 -m venv venv\n            source venv/bin/activate\n            make install\n            \n      - save_cache:\n          paths:\n            - ./venv\n          key: v1-dependencies-{{ checksum \"requirements.txt\" }}\n\n      - run:\n          name: run lint\n          command: |\n            source venv/bin/activate\n            make lint\n            \n  \n  build-test-push:\n    machine: true\n    working_directory: ~/app\n    steps:\n      - checkout\n      - run:\n          name: Build, test and push docker image\n          command: |\n\n            docker build -t kibnov/container -t kibnov/container:${CIRCLE_WORKFLOW_ID:0:7} .\n            docker run -d --rm --name flaskapp -p 8000:8080 kibnov/container:${CIRCLE_WORKFLOW_ID:0:7}\n            sleep 5\n            \n            \n          \n  create-cluster:\n    executor: aws-eks/python3\n    parameters:\n      cluster-name:\n        description: |\n          Name of the EKS cluster\n        type: string\n    steps:\n      - run:\n          name: Set var\n          command: |\n            curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"\n            unzip awscliv2.zip\n            sudo ./aws/install\n            aws --version\n      \n      - aws-eks/create-cluster:\n          cluster-name: << parameters.cluster-name >>\n            \n\n  create-deployment:\n    executor: aws-eks/python3\n    parameters:\n      cluster-name:\n        description: |\n          Name of the EKS cluster\n        type: string\n\n    steps:\n      - checkout\n      - kubernetes/install\n      - aws-eks/update-kubeconfig-with-authenticator:\n          cluster-name: << parameters.cluster-name >>\n          install-kubectl: true\n      - kubernetes/create-or-update-resource:\n          get-rollout-status: true\n          resource-file-path: deployment.yml\n          resource-name: deployment/aws-capstone\n\n  test-cluster:\n    executor: aws-eks/python3\n    parameters:\n      cluster-name:\n        description: |\n          Name of the EKS cluster\n        type: string\n    steps:\n      - kubernetes/install\n      - aws-eks/update-kubeconfig-with-authenticator:\n          cluster-name: << parameters.cluster-name >>\n      - run:\n          name: Test cluster\n          command: |\n            kubectl get svc\n            kubectl get nodes\n            kubectl get deployment\nworkflows:\n  capstone:\n    jobs:\n      - lint\n      - build-test-push:\n          requires:\n            - lint\n      - create-cluster:\n          cluster-name:  devops-capstone-project\n          requires:\n            - build-test-push\n\n      - create-deployment:\n          cluster-name:  devops-capstone-project\n          requires:\n            - create-cluster\n\n      - aws-eks/update-container-image:\n          cluster-name: devops-capstone-project\n          container-image-updates: 'aws-capstone=kibnov/aws-capstone:${CIRCLE_WORKFLOW_ID:0:7}'\n          get-rollout-status: true\n          record: true\n          requires:\n            - create-deployment\n          resource-name:  deployment/aws-capstone\n\n      - test-cluster:\n          cluster-name:  devops-capstone-project\n          requires:\n            - aws-eks/update-container-image\n      - aws-eks/delete-cluster:\n         cluster-name:  devops-capstone-project\n         requires:\n           - test-cluster","undoManager":{"mark":0,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":165,"column":25},"action":"insert","lines":["version: 2.1","","orbs:","  aws-eks: circleci/aws-eks@1.0.3","  kubernetes: circleci/kubernetes@0.11.2","","executors:","  python:","    docker:","      - image: circleci/python:3.7.3-stretch","  aws:","    docker:","      - image: amazon/aws-cli","","jobs:","  lint:","    docker:","      - image: circleci/python:3.7.3-stretch","    steps:","      - checkout","      - restore_cache:","          keys:","            - v1-dependencies-{{ checksum \"requirements.txt\" }}","            - v1-dependencies-","      - run:","          name: install dependencies","          command: |","            python3 -m venv venv","            source venv/bin/activate","            make install","            ","      - save_cache:","          paths:","            - ./venv","          key: v1-dependencies-{{ checksum \"requirements.txt\" }}","","      - run:","          name: run lint","          command: |","            source venv/bin/activate","            make lint","            ","  ","  build-test-push:","    machine: true","    working_directory: ~/app","    steps:","      - checkout","      - run:","          name: Build, test and push docker image","          command: |","","            docker build -t kibnov/container -t kibnov/container:${CIRCLE_WORKFLOW_ID:0:7} .","            docker run -d --rm --name flaskapp -p 8000:8080 kibnov/container:${CIRCLE_WORKFLOW_ID:0:7}","            sleep 5","            ","            ","            docker container ls","            export url=\"http://localhost:8000\"","            export response=$(curl -s $url)","            echo \"This is response $response\"","            if [[ $response == *\"kibnov\"* ]]; then","              docker stop flaskapp","            else","              docker stop flaskapp","              exit 1","            fi","            ","            ","            echo \"CIRCLE CI WORKFLOW ID ${CIRCLE_WORKFLOW_ID:0:7}\"","            docker push kibnov/container:${CIRCLE_WORKFLOW_ID:0:7}","            docker push kibnov/container:latest","            fi","          ","  create-cluster:","    executor: aws-eks/python3","    parameters:","      cluster-name:","        description: |","          Name of the EKS cluster","        type: string","    steps:","      - run:","          name: Set var","          command: |","            curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"","            unzip awscliv2.zip","            sudo ./aws/install","            aws --version","            export clusters=$(aws eks list-clusters)","            if [[ $clusters == *\"<< parameters.cluster-name >>\"* ]]; then","              circleci-agent step halt","            fi","      - aws-eks/create-cluster:","          cluster-name: << parameters.cluster-name >>","","  create-deployment:","    executor: aws-eks/python3","    parameters:","      cluster-name:","        description: |","          Name of the EKS cluster","        type: string","","    steps:","      - checkout","      - kubernetes/install","      - aws-eks/update-kubeconfig-with-authenticator:","          cluster-name: << parameters.cluster-name >>","          install-kubectl: true","      - kubernetes/create-or-update-resource:","          get-rollout-status: true","          resource-file-path: deployment.yml","          resource-name: deployment/aws-capstone","","  test-cluster:","    executor: aws-eks/python3","    parameters:","      cluster-name:","        description: |","          Name of the EKS cluster","        type: string","    steps:","      - kubernetes/install","      - aws-eks/update-kubeconfig-with-authenticator:","          cluster-name: << parameters.cluster-name >>","      - run:","          name: Test cluster","          command: |","            kubectl get svc","            kubectl get nodes","            kubectl get deployment","workflows:","  capstone:","    jobs:","      - lint","      - build-test-push:","          requires:","            - lint","      - create-cluster:","          cluster-name:  devops-capstone-project","          requires:","            - build-test-push","","      - create-deployment:","          cluster-name:  devops-capstone-project","          requires:","            - create-cluster","","      - aws-eks/update-container-image:","          cluster-name: devops-capstone-project","          container-image-updates: 'aws-capstone=kibnov/aws-capstone:${CIRCLE_WORKFLOW_ID:0:7}'","          get-rollout-status: true","          record: true","          requires:","            - create-deployment","          resource-name:  deployment/aws-capstone","","      - test-cluster:","          cluster-name:  devops-capstone-project","          requires:","            - aws-eks/update-container-image","      - aws-eks/delete-cluster:","         cluster-name:  devops-capstone-project","         requires:","           - test-cluster"],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":165,"column":25},"action":"remove","lines":["version: 2.1","","orbs:","  aws-eks: circleci/aws-eks@1.0.3","  kubernetes: circleci/kubernetes@0.11.2","","executors:","  python:","    docker:","      - image: circleci/python:3.7.3-stretch","  aws:","    docker:","      - image: amazon/aws-cli","","jobs:","  lint:","    docker:","      - image: circleci/python:3.7.3-stretch","    steps:","      - checkout","      - restore_cache:","          keys:","            - v1-dependencies-{{ checksum \"requirements.txt\" }}","            - v1-dependencies-","      - run:","          name: install dependencies","          command: |","            python3 -m venv venv","            source venv/bin/activate","            make install","            ","      - save_cache:","          paths:","            - ./venv","          key: v1-dependencies-{{ checksum \"requirements.txt\" }}","","      - run:","          name: run lint","          command: |","            source venv/bin/activate","            make lint","            ","  ","  build-test-push:","    machine: true","    working_directory: ~/app","    steps:","      - checkout","      - run:","          name: Build, test and push docker image","          command: |","","            docker build -t kibnov/container -t kibnov/container:${CIRCLE_WORKFLOW_ID:0:7} .","            docker run -d --rm --name flaskapp -p 8000:8080 kibnov/container:${CIRCLE_WORKFLOW_ID:0:7}","            sleep 5","            ","            ","            docker container ls","            export url=\"http://localhost:8000\"","            export response=$(curl -s $url)","            echo \"This is response $response\"","            if [[ $response == *\"kibnov\"* ]]; then","              docker stop flaskapp","            else","              docker stop flaskapp","              exit 1","            fi","            ","            ","            echo \"CIRCLE CI WORKFLOW ID ${CIRCLE_WORKFLOW_ID:0:7}\"","            docker push kibnov/container:${CIRCLE_WORKFLOW_ID:0:7}","            docker push kibnov/container:latest","            fi","          ","  create-cluster:","    executor: aws-eks/python3","    parameters:","      cluster-name:","        description: |","          Name of the EKS cluster","        type: string","    steps:","      - run:","          name: Set var","          command: |","            curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"","            unzip awscliv2.zip","            sudo ./aws/install","            aws --version","            export clusters=$(aws eks list-clusters)","            if [[ $clusters == *\"<< parameters.cluster-name >>\"* ]]; then","              circleci-agent step halt","            fi","      - aws-eks/create-cluster:","          cluster-name: << parameters.cluster-name >>","","  create-deployment:","    executor: aws-eks/python3","    parameters:","      cluster-name:","        description: |","          Name of the EKS cluster","        type: string","","    steps:","      - checkout","      - kubernetes/install","      - aws-eks/update-kubeconfig-with-authenticator:","          cluster-name: << parameters.cluster-name >>","          install-kubectl: true","      - kubernetes/create-or-update-resource:","          get-rollout-status: true","          resource-file-path: deployment.yml","          resource-name: deployment/aws-capstone","","  test-cluster:","    executor: aws-eks/python3","    parameters:","      cluster-name:","        description: |","          Name of the EKS cluster","        type: string","    steps:","      - kubernetes/install","      - aws-eks/update-kubeconfig-with-authenticator:","          cluster-name: << parameters.cluster-name >>","      - run:","          name: Test cluster","          command: |","            kubectl get svc","            kubectl get nodes","            kubectl get deployment","workflows:","  capstone:","    jobs:","      - lint","      - build-test-push:","          requires:","            - lint","      - create-cluster:","          cluster-name:  devops-capstone-project","          requires:","            - build-test-push","","      - create-deployment:","          cluster-name:  devops-capstone-project","          requires:","            - create-cluster","","      - aws-eks/update-container-image:","          cluster-name: devops-capstone-project","          container-image-updates: 'aws-capstone=kibnov/aws-capstone:${CIRCLE_WORKFLOW_ID:0:7}'","          get-rollout-status: true","          record: true","          requires:","            - create-deployment","          resource-name:  deployment/aws-capstone","","      - test-cluster:","          cluster-name:  devops-capstone-project","          requires:","            - aws-eks/update-container-image","      - aws-eks/delete-cluster:","         cluster-name:  devops-capstone-project","         requires:","           - test-cluster"],"id":2},{"start":{"row":0,"column":0},"end":{"row":147,"column":25},"action":"insert","lines":["version: 2.1","","orbs:","  aws-eks: circleci/aws-eks@1.0.3","  kubernetes: circleci/kubernetes@0.11.2","","executors:","  python:","    docker:","      - image: circleci/python:3.7.3-stretch","  aws:","    docker:","      - image: amazon/aws-cli","","jobs:","  lint:","    docker:","      - image: circleci/python:3.7.3-stretch","    steps:","      - checkout","      - restore_cache:","          keys:","            - v1-dependencies-{{ checksum \"requirements.txt\" }}","            - v1-dependencies-","      - run:","          name: install dependencies","          command: |","            python3 -m venv venv","            source venv/bin/activate","            make install","            ","      - save_cache:","          paths:","            - ./venv","          key: v1-dependencies-{{ checksum \"requirements.txt\" }}","","      - run:","          name: run lint","          command: |","            source venv/bin/activate","            make lint","            ","  ","  build-test-push:","    machine: true","    working_directory: ~/app","    steps:","      - checkout","      - run:","          name: Build, test and push docker image","          command: |","","            docker build -t kibnov/container -t kibnov/container:${CIRCLE_WORKFLOW_ID:0:7} .","            docker run -d --rm --name flaskapp -p 8000:8080 kibnov/container:${CIRCLE_WORKFLOW_ID:0:7}","            sleep 5","            ","            ","          ","  create-cluster:","    executor: aws-eks/python3","    parameters:","      cluster-name:","        description: |","          Name of the EKS cluster","        type: string","    steps:","      - run:","          name: Set var","          command: |","            curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"","            unzip awscliv2.zip","            sudo ./aws/install","            aws --version","      ","      - aws-eks/create-cluster:","          cluster-name: << parameters.cluster-name >>","            ","","  create-deployment:","    executor: aws-eks/python3","    parameters:","      cluster-name:","        description: |","          Name of the EKS cluster","        type: string","","    steps:","      - checkout","      - kubernetes/install","      - aws-eks/update-kubeconfig-with-authenticator:","          cluster-name: << parameters.cluster-name >>","          install-kubectl: true","      - kubernetes/create-or-update-resource:","          get-rollout-status: true","          resource-file-path: deployment.yml","          resource-name: deployment/aws-capstone","","  test-cluster:","    executor: aws-eks/python3","    parameters:","      cluster-name:","        description: |","          Name of the EKS cluster","        type: string","    steps:","      - kubernetes/install","      - aws-eks/update-kubeconfig-with-authenticator:","          cluster-name: << parameters.cluster-name >>","      - run:","          name: Test cluster","          command: |","            kubectl get svc","            kubectl get nodes","            kubectl get deployment","workflows:","  capstone:","    jobs:","      - lint","      - build-test-push:","          requires:","            - lint","      - create-cluster:","          cluster-name:  devops-capstone-project","          requires:","            - build-test-push","","      - create-deployment:","          cluster-name:  devops-capstone-project","          requires:","            - create-cluster","","      - aws-eks/update-container-image:","          cluster-name: devops-capstone-project","          container-image-updates: 'aws-capstone=kibnov/aws-capstone:${CIRCLE_WORKFLOW_ID:0:7}'","          get-rollout-status: true","          record: true","          requires:","            - create-deployment","          resource-name:  deployment/aws-capstone","","      - test-cluster:","          cluster-name:  devops-capstone-project","          requires:","            - aws-eks/update-container-image","      - aws-eks/delete-cluster:","         cluster-name:  devops-capstone-project","         requires:","           - test-cluster"]}]]},"ace":{"folds":[],"scrolltop":540,"scrollleft":0,"selection":{"start":{"row":147,"column":25},"end":{"row":147,"column":25},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1630076317973}